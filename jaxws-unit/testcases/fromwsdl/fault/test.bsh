import javax.xml.namespace.QName;
import javax.xml.soap.Detail;
import javax.xml.soap.DetailEntry;
import javax.xml.ws.ProtocolException;
import javax.xml.ws.soap.SOAPFaultException;
import java.util.Iterator;

    //test nulls in fault bean
    try{
        in = "nullBean";
        faultPort.echo(in);
        assertTrue(false);
    }catch(Fault2Exception e){
        assertTrue(e.getFaultInfo() == null);
        assertTrue(true);
    }

    //test WSDL defined Fault1
    try {
        in = "Fault1";
        ret = faultPort.echo(in);
        fail("did not receive an exception");
    } catch (Fault1Exception e) {
        System.out.println("Expected exception received: " + e.getMessage());
        assertTrue(true);
    }

    //test WSDL defined Fault2
    try {
        in = "Fault2";
        ret = faultPort.echo(in);
        fail("did not receive an exception");
    } catch (Fault2Exception e) {
        System.out.println("Expected exception received: " + e.getMessage());
        assertTrue(true);
    }

    //test WSDL defined Fault3
    try {
        in = "Fault3";
        ret = faultPort.echo(in);
        fail("did not receive an exception");
    } catch (Fault3Exception e) {
        System.out.println("Expected exception received: " + e.getMessage());
        assertTrue(true);
    }

    //test WSDL defined Fault4
    try {
        in = "Fault4";
        ret = faultPort.echo(in);
        fail("did not receive an exception");
    } catch (Fault4Exception e) {
        System.out.println("Expected exception received: " + e.getMessage());
        assertTrue(true);
    }

    //test SOAPFaultException due to NPE on the server
    try {
        in = "NullPointerException";
        ret = faultPort.echo(in);
        fail("did not receive an exception");
    } catch (ProtocolException e) {
        System.out.println("Expected exception received: " + e.getMessage());
        assertTrue(true);
    }

    //test SOAPFaultException
    try {
        in = "SOAPFaultException";
        ret = faultPort.echo(in);
        fail("did not receive an exception");
    } catch (ProtocolException e) {
        if (e instanceof SOAPFaultException) {
            System.out.println("Expected exception received: " + e.getMessage());
            Detail detail = ((SOAPFaultException)e).getFault().getDetail();
            assertNotNull(detail);
            Iterator i = detail.getDetailEntries();
            assertTrue(i.hasNext());
            assertEquals(((DetailEntry)i.next()).getElementQName(),
               new QName("http://faultservice.org/wsdl", "BasicFault"));
        } else
            assertTrue(false);
    }

    //test SOAP fault with cause
    try {
        in = "Fault1-SOAPFaultException";
        ret = faultPort.echo(in);
        fail("did not receive an exception");
    } catch (Fault1Exception e) {
        System.out.println("Expected exception received: " + e.getMessage());
        assertTrue(true);
    }

    //test multiple details
    try {
        faultPort.echo("multipleDetails");
    } catch (SOAPFaultException e) {
        System.out.println("Expected exception received: " + e.getMessage());
        Detail detail = e.getFault().getDetail();
        assertNotNull(detail);
        Iterator i = detail.getDetailEntries();
        assertTrue(i.hasNext());
        DetailEntry detail1 = (DetailEntry) i.next();
        assertEquals(detail1.getElementQName(),
                new QName(
                        "http://www.example.com/faults", "myFirstDetail"));

        String val1 = detail1.getAttribute("msg");
        assertNotNull(val1);

        assertTrue(val1.equals("This is the first detail message."));

        assertTrue(i.hasNext());
        DetailEntry detail2 = (DetailEntry) i.next();
        assertEquals(detail2.getElementQName(),
                new QName(
                        "http://www.example.com/faults", "mySecondDetail"));
        String val2 = detail2.getAttribute("msg");
        assertNotNull(val2);
        assertTrue(val2.equals("This is the second detail message."));
    }

    //test ProtocolException
    try {
        in = "ProtocolException";
        ret = faultPort.echo(in);
        fail("did not receive an exception");
    } catch (ProtocolException e) {
        System.out.println("Expected exception received: " + e.getMessage());
        if (e.getMessage().indexOf("javax.xml.ws.ProtocolException") != -1)
            assertTrue(true);
        else
            assertTrue(false);
    }

    //test ProtocolException with cause
    try {
        in = "ProtocolException2";
        ret = faultPort.echo(in);
        fail("did not receive an exception");
    } catch (ProtocolException e) {
        System.out.println("Expected exception received: " + e.getMessage());
        if (e.getMessage().indexOf("FaultImpl") != -1)
            assertTrue(true);
        else
            assertTrue(false);
    }

