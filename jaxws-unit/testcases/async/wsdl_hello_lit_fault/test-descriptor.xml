<descriptor since="2.0">
  <description>Asynchronous fault handling with doc/lit</description>
  <service basedir="./server">
    <wsdl href="hello_test.wsdl" />
  </service>
  <client><![CDATA[
    try{
        req = new Hello_Type();
        req.setArgument("foo");
        req.setExtra("bar");
        helloPort.hello(req);
        fail();
    } catch(Exception e){
        System.out.println("e is " + e.getClass().getName());
        assertTrue(e instanceof HelloFault);
    }
  ]]></client>
  <client><![CDATA[
    try{
      req = new Hello_Type();
      req.setArgument("foo");req.setExtra("bar");

      response = helloPort.helloAsync(req);
      System.out.print("\npolling for response ...");
      while (!response.isDone())
        ;

      assertTrue(response.get() == null);
    } catch(Exception e){
      assertTrue(e instanceof ExecutionException);
      assertTrue(e.getCause() instanceof HelloFault);
    }
  ]]></client>
  <client><![CDATA[
    req = new Hello_Type();
    req.setArgument("foo");
    req.setExtra("bar");

    response = helloPort.helloAsync(req, new HelloCallbackHandler());
    System.out.print("\nWaiting for CallbackHandler to complete...");
    while (!response.isDone())
      ;
  ]]></client>
</descriptor>
