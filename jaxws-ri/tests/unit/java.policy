// Standard extensions get all permissions by default

grant codeBase "file:${{java.ext.dirs}}/*" {
	permission java.security.AllPermission;
};

// default permissions granted to all domains

grant { 
	// Allows any thread to stop itself using the java.lang.Thread.stop()
	// method that takes no argument.
	// Note that this permission is granted by default only to remain
	// backwards compatible.
	// It is strongly recommended that you either remove this permission
	// from this policy file or further restrict it to code sources
	// that you specify, because Thread.stop() is potentially unsafe.
	// See the API specification of java.lang.Thread.stop() for more 
        // information.
	permission java.lang.RuntimePermission "stopThread";

	// allows anyone to listen on un-privileged ports
	permission java.net.SocketPermission "localhost:1024-", "listen";

	// "standard" properies that can be read by anyone

	permission java.util.PropertyPermission "java.version", "read";
	permission java.util.PropertyPermission "java.vendor", "read";
	permission java.util.PropertyPermission "java.vendor.url", "read";
	permission java.util.PropertyPermission "java.class.version", "read";
	permission java.util.PropertyPermission "os.name", "read";
	permission java.util.PropertyPermission "os.version", "read";
	permission java.util.PropertyPermission "os.arch", "read";
	permission java.util.PropertyPermission "file.separator", "read";
	permission java.util.PropertyPermission "path.separator", "read";
	permission java.util.PropertyPermission "line.separator", "read";

	permission java.util.PropertyPermission "java.specification.version", "read";
	permission java.util.PropertyPermission "java.specification.vendor", "read";
	permission java.util.PropertyPermission "java.specification.name", "read";

	permission java.util.PropertyPermission "java.vm.specification.version", "read";
	permission java.util.PropertyPermission "java.vm.specification.vendor", "read";
	permission java.util.PropertyPermission "java.vm.specification.name", "read";
	permission java.util.PropertyPermission "java.vm.version", "read";
	permission java.util.PropertyPermission "java.vm.vendor", "read";
	permission java.util.PropertyPermission "java.vm.name", "read";

// tools: grant codeBase "file:/home/mkos/dev/jdk-forrests/_test_/2013-01-22-091550.huizwang.cr6618782/lib/tools.jar" {
  permission java.security.AllPermission;
 
  permission java.net.SocketPermission "*", "connect,resolve,accept,listen";

// tools-jaxws: grant codebase "file:/home/mkos/dev/jaxws22/tools/wscompile/-" {
//  permission java.security.AllPermission;
//  permission java.net.SocketPermission "*", "connect,resolve,accept,listen";

// jaxws binaries/tests source in case you run jdkInJVM: grant codeBase "file:/home/mkos/dev/jaxws22/-" {

  permission java.lang.RuntimePermission "setContextClassLoader";
  permission java.lang.RuntimePermission "createClassLoader";
  permission java.lang.RuntimePermission "getClassLoader";
  
  permission java.lang.RuntimePermission "accessDeclaredMembers";
  
// JAXWS (13_02)- "accessClassInPackage.com.sun.xml.internal.*":
  permission java.lang.RuntimePermission "accessClassInPackage.com.sun.xml.internal.ws";
  permission java.lang.RuntimePermission "accessClassInPackage.com.sun.xml.internal.ws.developer";
  permission java.lang.RuntimePermission "accessClassInPackage.com.sun.xml.internal.ws.api.message";

// JAXP:
  permission java.lang.RuntimePermission "accessClassInPackage.com.sun.xml.internal.stream";

// SAAJ FactoryFinder:
  permission java.lang.RuntimePermission "accessClassInPackage.com.sun.xml.internal.messaging.saaj.soap";


  permission java.lang.RuntimePermission "getProtectionDomain";
  permission java.lang.RuntimePermission "modifyThread";

  permission java.io.FilePermission "<<ALL FILES>>", "read,write, delete"; 
  permission java.util.PropertyPermission "*", "read,write";
  permission java.net.SocketPermission "*", "connect,resolve,accept,listen";
  permission java.lang.reflect.ReflectPermission "suppressAccessChecks";

  permission javax.xml.ws.WebServicePermission "publishEndpoint";

// harness components
// grant codebase "file:/home/mkos/.m2/repository/-" {
//  permission java.security.AllPermission;
//  permission java.net.SocketPermission "*", "connect,resolve,accept,listen";

};

